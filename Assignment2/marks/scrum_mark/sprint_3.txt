# Sprint 3 Nov 9, 2018
# Sprint 3 Backlog UserStories go below

--------------------------------------------------------------------------
TYPE : BUG 4 : galegoer
NAME : Architecture behind Model is poor
OWNER :
PRIORITY :
ESTIMATE : 6 hours (In combination with Bug7)
ISSUE : Having a list of different types of drawable things in the
model is cumbersome. In fact, it is currently incorrect, with
Squiggle's not drawing properly. Need to re-architect the Model
so that it is more flexible, and easier to work with.
Consider some design patterns, or change of responsibility
here.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE : BUG 7 : galegoer
NAME : Architecture for drawing shapes can be improved
OWNER :
PRIORITY :
ESTIMATE : 6 hours (In combination with Bug4)
ISSUE : The architecture can be improved if we implement the Command Design
Pattern to draw shapes as follows:

The PaintModel should use the command design pattern.
That is, each shape knows how to draw itself, so there is a single list of
DrawingCommands maintained by the PaintModel and used by the PaintPanel.
repaint() simply asks the PaintModel to ask command to execute(g).
The simplest way to make this happen is to make each shape implement the
DrawingCommand interface which requires execute(g) to be implemented.
Well sort of.

NOTE: The PaintModel does know how to logically draw itself, so does
know about strokes and pen colors etc. Depending on how much you want
to split off the logical from the GUI, it may not have to know how to
draw on the screen. This is a subtle difference. For example, the
following logically describes a scene, without actually knowing
how to draw it on the screen ...

Color = green
Fill = off
Border = on
BorderWidth = 10
Circle radius 10 at 12,15
Color = red
Fill = on
FillColor = black
Border = on
BorderWidth = 7
Square width 20 at 100,200

If you want to build a more 'logical' PaintModel, you can consider ...

1) Create a mirror hierarchy for Shape, this mirror hirerachy
has things like DrawableCircle which has a Circle. The DrawableCircle
knows how to draw the instance of Circle it holds. Each Shape will
still need information about its color, and stroke, one way or another.

OR

2) Lookup and apply the Visitor design pattern to the more logical
PaintModel.

--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE : BUG 5 : galegoer
NAME : Squiggle is broken
OWNER :
PRIORITY :
ESTIMATE : 3 hours
ISSUE : Squiggles are connected to each other by a straight line. Each drag
of the mouse should be a separate squiggle. Possibly
the issue is with the representation of the squiggles in the Model.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE : BUG 12 : galegoer
NAME : Clear canvas does not work
OWNER :
PRIORITY :
ESTIMATE : 1 hour
ISSUE : Clearing the canvas is broken as we don't refer to the ArrayLists
anymore.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE : USER STORY 12 : liwill13
NAME : Implement Line
OWNER :
PRIORITY :
ESTIMATE : 1 hour
AS A : user
I WANT : to be able to select the Line mode and click and drag to specify a line to be drawn on my canvas
SO THAT : I can now draw lines on my canvas
--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE : USER STORY 14 : liwill13
NAME : Implement PolyLine Feedback
OWNER :
PRIORITY :
ESTIMATE : 4 hours
AS A : user
I WANT : to have an indicator line after the user creates a point on the polyLine
SO THAT : you can see what the next line you are about to add to the polyLine looks like
--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE : USER STORY 13 : arnejagu
NAME : Implement rounded rectangles.
OWNER :
PRIORITY :
ESTIMATE : 8 hours
ISSUE : To have the feature to be able to draw rounded rectangles.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE : USER STORY 15 : arnejagu
NAME : Implement rounded rectangles.
OWNER :
PRIORITY :
ESTIMATE : 2 hours
ISSUE : To have the feature to be able to draw rounded squares.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE : USER STORY 10: galegoer
NAME : Undo/redo
OWNER :
PRIORITY :
ESTIMATE : 4 Hour
AS A : user
I WANT : Have a button that can be pressed to remove the last drawn
item. Also a button to redo a move that was undone.
SO THAT : A user can easily delete a mistake without having to reset and
clear the entire canvas.
--------------------------------------------------------------------------
